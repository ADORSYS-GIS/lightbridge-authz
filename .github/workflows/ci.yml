name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  sast:
    name: SAST Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Run cargo-deny
        uses: EmbarkStudios/cargo-deny-action@v1

  code-checks:
    name: Code Checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: clippy, rustfmt
      - name: Run cargo check
        run: cargo check --all-targets --all-features
      - name: Run cargo fmt
        run: cargo fmt -- --check
      - name: Run cargo clippy
        run: cargo clippy --all-targets --all-features -- -D warnings

  build:
    name: Build
    needs: [sast, code-checks]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Build release binaries
        run: cargo build --release --all-targets --all-features
      - name: Package artifacts
        run: tar -czf release-artifacts.tar.gz -C target/release .
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: release-artifacts
          path: release-artifacts.tar.gz

  release:
    name: Release
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: release-artifacts
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release-artifacts.tar.gz
          asset_name: release-artifacts.tar.gz
          asset_content_type: application/gzip